<script>
rzp1.on('payment.failed', async function (response) {
    console.log('Payment failed:', response.error);
    // rzp1.close();
    try {
        console.log('ðŸ“¤ Sending payment failed request:', {
            orderId: ourOrderId,
            status: 'Failed'
        });

        const failureResponse = await axios.post('/user/razorpay/verify', {
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: null,
            orderId: ourOrderId,
            status: 'Failed'
        });

        if(failureResponse.status === 200){
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: response.error.description || 'Payment process failed',
                allowOutsideClick: false
            }).then(() => {
                setTimeout(()=>{
                    window.location.href = '/user/orders';
                }, 2000);
            });
        } else {
            showToast(failureResponse.data.error, true);
        }
    } catch (error) {
        console.error('Error updating payment status:', error);
        showToast('Error updating payment status', true);
        Swal.fire({
            icon: 'error',
            title: 'Payment Failed',
            text: 'There was an error processing your payment',
            allowOutsideClick: false
        }).then(() => {
            window.location.href = '/user/orders';
        });
    }
});
rzp1.open();
</script>