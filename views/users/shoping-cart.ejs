<%- include('../partials/user/header.ejs') %>
<style>
    .pname {
    color: black;
    text-decoration: none;
    background-color: transparent;
}
.pname:hover{
color: rgb(237, 103, 0);
}

/* Modal Styles */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7); /* Darker backdrop */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensures it appears above other elements */
}

.modal-content {
    background: linear-gradient(135deg, #ffffff, #f8f8f8); /* Subtle gradient for a modern look */
    border-radius: 15px; /* Rounded corners */
    padding: 25px 30px;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2); /* Soft shadow for depth */
    width: 90%;
    max-width: 500px;
    text-align: center;
    position: relative;
    animation: slideDown 0.3s ease; /* Entrance animation */
}

@keyframes slideDown {
    from {
        transform: translateY(-50%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.close-btn {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 22px;
    font-weight: bold;
    cursor: pointer;
    color: #333; /* Neutral close button */
    transition: color 0.3s ease; /* Smooth hover effect */
}

.close-btn:hover {
    color: #e74c3c; /* Bright red on hover */
}

.modal-content h3 {
    font-family: 'Poppins', sans-serif; /* Modern font */
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
    color: #2c3e50; /* Dark text color for better contrast */
}

#coupons-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

#coupons-list li {
    font-family: 'Roboto', sans-serif; /* Clean font for the list */
    font-size: 16px;
    margin-bottom: 15px;
    padding: 10px;
    background: #f1f1f1;
    border-radius: 8px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, background-color 0.3s ease; /* Smooth hover */
}

#coupons-list li:hover {
    transform: scale(1.03); /* Slight scale on hover */
    background-color: #eafaf1; /* Light green for a friendly feel */
}

#coupons-list li strong {
    color: #16a085; /* Highlight coupon names in green */
    font-weight: bold;
}

.modal-content p {
    font-family: 'Open Sans', sans-serif; /* Lightweight font for additional details */
    font-size: 14px;
    color: #93abac;
    margin-top: 10px;
}

</style>

    <!-- Breadcrumb Begin -->
    <div class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="breadcrumb__text">
                        <h2>Shopping cart</h2>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="breadcrumb__links" style="text-align: right;">
                        <%if(shop){%>
                        <a href="/">Home</a>
                        <a href="/shop">shop</a>
                        <%}else{%>
                            <a href="/">Home</a>
                        <%}%>
                        <span>Shopping cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Breadcrumb End -->

    <!-- Shopping Cart Section Begin -->
    <section class="shopping-cart spad">
        <div class="container">
            <div class="row">
                <% if (empty) { %>
                    <div class="col-lg-12">
                        <h2>Your cart is currently empty.</h2>
                        <a href="/shop" class="primary-btn">Go to Shop</a>
                    </div>
                <% } else { %>
                <div class="col-lg-8">
                    <div class="shopping__cart__table">
                        <table>
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th style="padding-right: 30px;">Weight</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cart.items.forEach(item => { %>
                                <tr>
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                                <img style="width: 100px;" src="<%= item.productId.images[0].url %>" alt="<%= item.productId.name %>" >
                                        </div>
                                        <div class="product__cart__item__text">
                                            <h6><a class="pname" href="/products/<%= item.productId._id %>"><%= item.productId.name %></a></h6>
                                            <h5>Rs <%= item.price.toFixed(2) %></h5>
                                        </div>
                                    </td>
                                    <td class="quantity__item">
                                        <div class="quantity">
                                            <div class="pro-qty">
                                                <input type="text" id="qtyVal" value="<%= item.quantity %>" data-product-id="<%= item.productId._id %>" 
                                                 data-max="<%=item.productId.quantity%>"  data-item-weight="<%= item.weight %>" class="cart-quantity-input" >
                                            </div>
                                        </div>
                                    </td>
                                    <td class="cart__weight" style="padding-left:15px ;" >
                                        <%= item.weight %> kg
                                    </td>
                                    <td class="cart__price" >                                            
                                        Rs <%= item.totalPrice.toFixed(2) %>
                                    </td>
                                    <td class="cart__close">
                                        <span class="icon_close" data-product-id="<%= item.productId._id %>"></span>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="continue__btn">
                                <a href="/shop">Continue Shopping</a>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="continue__btn update__btn">
                                <a href="" id="update-cart-btn"><i class="fa fa-spinner"></i> Update Cart</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="cart__discount">
                        <h6>Discount codes</h6>
                        <form action="#">
                            <input type="text" placeholder="Coupon code" name="couponCode">
                            <button type="button" id="apply-coupon-btn" class="primary-btn">Apply</button>
                        </form>
                    </div>
                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <li>Subtotal <span>Rs <%= cart.totalCartPrice.toFixed(2) %></span></li>
                            <li id="discount-row" style="display: none;">Discount <span>Rs <span id="discount-amount">0.00</span></span></li>
                            <li id="old-total">
                                Total <span>Rs <%= cart.totalCartPrice.toFixed(2) %></span>
                            </li>  
                                <!-- Updated total, hidden by default -->
                            <li id="new-total" style="display: none;">
                             Total <span>Rs <span id="updated-amount">0.00</span></span>
                            </li>                      </ul>
                        <a href="/checkout" class="primary-btn">Proceed to checkout</a>
                    </div>
                    <button type="button" class="primary-btn" id="coupons-btn" style="margin-left: 100px;margin-top: 20px;" >Coupons</button>
                </div>
                <% } %>
            </div>
        </div>
    </section>
    <!-- Coupons Modal -->
<div id="coupons-modal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close-btn">&times;</span>
        <h3>Available Coupons</h3>
        <ul id="coupons-list">
            <% coupon.forEach(coupon => { %>
            <li>
                <strong><%= coupon.name %></strong>:<br> <%= coupon.description %> - Rs <%= coupon.offerPrice %> off
            </li>
            <% }); %>
        </ul>
    </div>
</div>
    <!-- Shopping Cart Section End -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('update-cart-btn').addEventListener('click', function(e) {
            e.preventDefault();
            const items = [];
            document.querySelectorAll('.cart-quantity-input').forEach(input => {
                const productId = input.getAttribute('data-product-id');
                const weight = input.getAttribute('data-item-weight');
                const quantity = input.value;
    
                items.push({ productId, quantity, weight });
            });

            fetch('/cart/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ items })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Cart updated',
                        text: data.message
                    }).then(() => {
                        window.location.href = '/cart';  // Redirect to login page
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Could not update cart. Please try again.'
                });
            });
        });
    
        // Delete product from cart
        document.querySelectorAll('.cart__close .icon_close').forEach(icon => {
            icon.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
    
                fetch(`/cart/delete/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Product removed',
                            text: data.message
                        }).then(() => {
                            window.location.href = '/cart';  // Redirect to login page
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Could not remove product. Please try again.'
                    });
                });
            });
        });
    });
document.getElementById('coupons-btn').addEventListener('click', () => {
    document.getElementById('coupons-modal').style.display = 'flex';
});

document.querySelector('.close-btn').addEventListener('click', () => {
    document.getElementById('coupons-modal').style.display = 'none';
});

window.addEventListener('click', (event) => {
    const modal = document.getElementById('coupons-modal');
    if (event.target === modal) {
        modal.style.display = 'none';
    }
});
document.getElementById('apply-coupon-btn').addEventListener('click', function () {
    const couponCode = document.querySelector('input[name="couponCode"]').value;

    if (!couponCode.trim()) {
        Swal.fire("Error", "Please enter a coupon code.", "error");
        return;
    }

    fetch('/apply-coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ couponCode })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const discountRow = document.getElementById('discount-row');
            const discountAmount = document.getElementById('discount-amount');
            const oldTotal = document.getElementById('old-total');
            const newTotal = document.getElementById('new-total');
            const updatedAmount = document.getElementById('updated-amount');

            discountRow.style.display = 'block';
            discountAmount.textContent = data.discountAmount;
            updatedAmount.textContent = data.updatedTotal;

            oldTotal.style.display = 'none'; // Hide old total
            newTotal.style.display = 'block'; // Show new total
            
            Swal.fire("Success", data.message, "success");

            const button = document.getElementById('apply-coupon-btn');
            button.style.backgroundColor = "#28a745"; 
            button.innerText = "Coupon Applied!";
        } else {
            // Show error alert
            Swal.fire("Error", data.message, "error");
        }
    })
    .catch(err => {
        console.error(err);
        Swal.fire("Error", "Something went wrong. Please try again.", "error");
    });
});

    </script>
    
    <%- include('../partials/user/footer.ejs') %>