const User = require('../models/userSchema');
const Product = require('../models/productSchema');
const Cart = require('../models/cartSchema');
const Order = require('../models/orderSchema');
const Address = require('../models/addressSchema');


const getOrder = async (req,res) => {
    try {
        const orders = await Order.find( ).populate('userId', 'name').sort({ createdAt: -1 });
        res.render('orderListing',{ orders })
    } catch (error) {
        console.error('Error fetching orders:', error);
        res.status(500).send('Server error');
    }
}

const getOrderDetails = async (req, res) => {
    try {
        const orderId = req.params.orderId;

        const order = await Order.findOne({ _id: orderId })
            .populate('userId', 'name')
            .populate('orderItems.productId') 
            let defaultAddress = null;             

        if (order.address) {
            const addressDoc = await Address.findOne(
                { 'address._id': order.address },
                { address: { $elemMatch: { _id: order.address } } } 
            );
            defaultAddress = addressDoc ? addressDoc.address[0] : null;
        }

        res.render('adminOrderDetails', { order , defaultAddress});
    } catch (err) {
        console.error(err);
        res.status(500).send("Error retrieving order details");
    }
};

const updateOrderStatus = async (req, res) => {
    const { orderId } = req.params;
    const { status } = req.body;

    try {
        await Order.updateOne({ _id: orderId }, { status });
        res.json({ success: true, message: 'Order status updated successfully!' });
    } catch (error) {
        console.error('Error updating order status:', error);
        res.json({ success: false, message: 'Failed to update order status.' });
    }
}


module.exports = {
    getOrder,
    getOrderDetails,
    updateOrderStatus,
}