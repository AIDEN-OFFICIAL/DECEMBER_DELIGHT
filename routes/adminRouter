const express = require('express');
const router = express.Router();
const multer = require('multer');
const adminController = require('../controller/adminController');
const customerController = require('../controller/customerController');
const categoryController = require('../controller/categoryController');
const productController = require('../controller/productController');
const { adminAuth } = require('../middlewares/auth');
const path = require('path');

const preventCache = (req, res, next) => {
  res.set('Cache-Control', 'no-store, no-cache, must-revalidate, private');
  res.set('Pragma', 'no-cache');
  res.set('Expires', '0');
  next();
};

const imageDir = path.join(__dirname, '../public/uploads/product-images');

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, imageDir); // Set destination to the image directory
  },
  filename: (req, file, cb) => {
    // Create a unique filename using the current timestamp and original name
    const uniqueSuffix =
      Date.now() + '-' + file.originalname.replace(/\s+/g, '-'); // Replace spaces with dashes
    cb(null, uniqueSuffix); // Use the unique filename
  },
});

const uploads = multer({
  storage: storage,
  limits: {
    fileSize: 2 * 1024 * 1024 * 4, //2mb
    files: 6, // Maximum number of files
    fieldSize: 10 * 1024 * 1024  // Increase field size limit to 10MB

  },
});

router.get('/', adminController.loadLogin);
router.post('/', adminController.login);
router.get('/dashboard', adminAuth, adminController.loadDashboard);
router.get('/pageError', adminController.pageError);
router.get('/logout',preventCache, adminController.logout);
router.get('/users', adminAuth, customerController.customerInfo);

router.get(
  '/blockCustomer',
  adminAuth,
  customerController.customerBlocked
);
router.get(
  '/unblockCustomer',
  adminAuth,
  customerController.customerUnblocked
);

router.get('/category', adminAuth, categoryController.categoryInfo);
router.post('/addCategory', adminAuth, categoryController.addCategory);
router.post(
  '/addCategoryOffer',
  adminAuth,
  categoryController.addCategoryOffer
);
router.post(
  '/removeCategoryOffer',
  adminAuth,
  categoryController.removeCategoryOffer
);
router.get(
  '/listCategory',
  adminAuth,
  categoryController.getListCategory
);
router.get(
  '/unlistCategory',
  adminAuth,
  categoryController.getUnlistCategory
);
router.get(
  '/editCategory',
  adminAuth,
  categoryController.getEditCategory
);
router.post(
  '/editCategory/:id',
  adminAuth,
  categoryController.editCategory
);

router.get(
  '/addProducts/',
  adminAuth,
  productController.getProductAddPage
);
router.post(
  '/addProducts/',
  adminAuth,
  uploads.array('images', 6),
  productController.addProducts
);
// router.get('/products/', adminAuth,productController.addProducts);

module.exports = router;
